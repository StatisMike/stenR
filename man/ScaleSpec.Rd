% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/handle_raw_scores.R
\name{ScaleSpec}
\alias{ScaleSpec}
\title{Scale Specification object}
\usage{
ScaleSpec(
  name,
  item_names,
  reverse,
  min,
  max,
  na_value = as.integer(NA),
  reverse_custom
)
}
\arguments{
\item{name}{character with name of the scale/factor}

\item{item_names}{character vector containing names of the items that the
scale/factor consists of.}

\item{reverse}{character vector containing names of the items that need to be
reversed during scale/factor summing. Reversed using the default \code{min} and
\code{max} values.}

\item{min, max}{integer containing the default minimal/maximal value that the
answer to the item can be scored as. Needed only if there are any names
presented in \code{reverse}.}

\item{na_value}{integer value to be input in missing values as default.
Defaults to \code{as.integer(NA)}.}

\item{reverse_custom}{if there are any differently-scored items in need of
reverse scoring, their specification need to be given there as a \emph{data.frame}
containing columns: \code{item_names}, \code{min}, \code{max} and, optionally, \code{na_value}.}
}
\value{
object of \emph{ScaleSpec} class
}
\description{
Object containing scale or factor specification data. It describes
the scale or factor, with regard to which items from the source data are part
of it, which need to be summed with reverse scoring, and how to handle \code{NA}s.
To be used with \code{\link[=sum_items_to_scale]{sum_items_to_scale()}} function to preprocess item data.
}
\examples{
# create the Scale Specifications for SLCS dataset
## Self-Liking specification
SL_spec <- ScaleSpec(
  name = "SL",
  item_names = paste("SLCS", c(1, 3, 5, 6, 7, 9, 11, 15), sep = "_"),
  reverse = paste("SLCS", c(1, 6, 7, 15), sep = "_"),
  min = 1,
  max = 5)

## Self-Competence specification
SC_spec <- ScaleSpec(
  name = "SC",
  item_names = paste("SLCS", c(2, 4, 8, 10, 12, 13, 14, 16), sep = "_"),
  reverse = paste("SLCS", c(8, 10, 13), sep = "_"),
  min = 1,
  max = 5)

## General Score specification
GS_spec <- ScaleSpec(
  name = "GS",
  item_names = paste("SLCS", 1:16, sep = "_"),
  reverse = paste("SLCS", c(1, 6, 7, 8, 10, 13, 15), sep = "_"),
  min = 1, 
  max = 5)

# Sum the raw item scores to raw scale scores
SLCS_summed <- sum_items_to_scale(SLCS, SL_spec, SC_spec, GS_spec, id_col = "user_id")
summary(SLCS_summed)
}
\seealso{
Other item preprocessing functions: 
\code{\link{sum_items_to_scale}()}
}
\concept{item preprocessing functions}
